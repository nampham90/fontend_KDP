{"version":3,"file":"src_app_pages_dashboard_dashboard_module_ts.js","mappings":"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","sources":["./src/app/core/services/common/webservice.service.ts","./src/app/pages/dashboard/dashboard-routing.module.ts","./src/app/pages/dashboard/dashboard.module.ts"],"sourcesContent":["\r\n\r\nimport { BaseHttpService } from '@services/base-http.service';\r\nimport { HttpClient, HttpHeaders, HttpResponse } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport * as Const from '@app/common/const';\r\nexport interface Product {\r\n  id: number;\r\n  title: string;\r\n  price: string;\r\n  description: string;\r\n  category: string;\r\n  image: string;\r\n  rating: Object | any;\r\n}\r\nexport interface  ObjectDataSC{\r\n  stt : string;\r\n  title1 : string;\r\n  title2 : string;\r\n}   \r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class WebserviceService {\r\n  urlApi = 'https://fakestoreapi.com/';\r\n  provincesApi = Const.tinhthanhApi;\r\n  constructor(\r\n    public http: BaseHttpService,\r\n    private httpt: HttpClient\r\n  ) { \r\n    \r\n  }\r\n\r\n  httpOptions = {\r\n    headers: new HttpHeaders({\r\n      'Content-Type': 'application/json',\r\n    }),\r\n  };\r\n\r\n\r\n\r\n  async GetCallProvinces(\r\n    fncSuccess?: ((data: any) => void),\r\n    fncError?: (() => void)): Promise<Observable<HttpResponse<any>>> {\r\n   let promise =  this.httpt.get<any>(this.provincesApi);\r\n   promise.subscribe({\r\n     next: (res: any) => {\r\n       if(fncSuccess != null){\r\n          fncSuccess(res);\r\n       }\r\n       return true;\r\n     },\r\n     error: (err: any) => {\r\n        if(fncError != null){\r\n          fncError();\r\n        }\r\n        return false;\r\n     },\r\n     complete: ()=> {}\r\n   })\r\n   return promise;\r\n }\r\n\r\n  async GetCallCommonWs(serviceName: string,\r\n    fncSuccess?: ((data: any) => void),\r\n    fncError?: (() => void)): Promise<Observable<HttpResponse<any>>> {\r\n   let promise =  this.httpt.get<any>(this.urlApi + serviceName, { observe: 'response' });\r\n   promise.subscribe({\r\n     next: (res: any) => {\r\n       if(fncSuccess != null){\r\n          fncSuccess(res);\r\n       }\r\n       return true;\r\n     },\r\n     error: (err: any) => {\r\n        if(fncError != null){\r\n          fncError();\r\n        }\r\n        return false;\r\n     },\r\n     complete: ()=> {}\r\n   })\r\n   return promise;\r\n }\r\n\r\n  async PostCallCommonWs(serviceName: string, data: any,\r\n    fncSuccess?: ((data: ObjectDataSC) => void),\r\n     fncError?: (() => void)): Promise<Observable<HttpResponse<any>>> {\r\n    let promisr = this.http.post<ObjectDataSC>(serviceName, data,  { needSuccessInfo: false });\r\n    promisr.subscribe({\r\n      next: (res: any) => {\r\n        if(fncSuccess != null){\r\n           fncSuccess(res);\r\n        }\r\n        return true;\r\n      },\r\n      error: (err: any) => {\r\n         if(fncError != null){\r\n           fncError();\r\n         }\r\n         return false;\r\n      },\r\n      complete: ()=> {}\r\n    })\r\n    return promisr;\r\n  }\r\n\r\n  async GetCallWs(serviceName: string,\r\n     fncSuccess?: ((data: any) => void),\r\n     fncError?: (() => void)): Promise<Observable<HttpResponse<any>>> {\r\n    let promise =  this.http.get<any>(serviceName, { observe: 'response' });\r\n    promise.subscribe({\r\n      next: (res: any) => {\r\n        if(fncSuccess != null){\r\n           fncSuccess(res);\r\n        }\r\n        return true;\r\n      },\r\n      error: (err: any) => {\r\n         if(fncError != null){\r\n           fncError();\r\n         }\r\n         return false;\r\n      },\r\n      complete: ()=> {}\r\n    })\r\n    return promise;\r\n  }\r\n\r\n  async PostCallWs(serviceName: string, data: any,\r\n    fncSuccess?: ((data: any) => void),\r\n     fncError?: (() => void)): Promise<Observable<HttpResponse<any>>> {\r\n    let promisr = this.http.post<any>(serviceName, data, { needSuccessInfo: false });\r\n    promisr.subscribe({\r\n      next: (res: any) => {\r\n        if(fncSuccess != null){\r\n           fncSuccess(res);\r\n        }\r\n        return true;\r\n      },\r\n      error: (err: any) => {\r\n         if(fncError != null){\r\n           fncError();\r\n         }\r\n         return false;\r\n      },\r\n      complete: ()=> {}\r\n    })\r\n    return promisr;\r\n  }\r\n\r\n  async PutCallWs(serviceName: string, data: any,\r\n    fncSuccess?: ((data: any) => void),\r\n     fncError?: (() => void)): Promise<Observable<HttpResponse<any>>> {\r\n    let promisr = this.http.put<any>(serviceName, data,  { needSuccessInfo: true });\r\n    promisr.subscribe({\r\n      next: (res: any) => {\r\n        if(fncSuccess != null){\r\n           fncSuccess(res);\r\n        }\r\n        return true;\r\n      },\r\n      error: (err: any) => {\r\n         if(fncError != null){\r\n           fncError();\r\n         }\r\n         return false;\r\n      },\r\n      complete: ()=> {}\r\n    })\r\n    return promisr;\r\n  }\r\n\r\n  async DeleteCallWs(serviceName: string, data: any,\r\n    fncSuccess?: ((data: any) => void),\r\n     fncError?: (() => void)): Promise<Observable<HttpResponse<any>>> {\r\n    let promisr = this.http.delete<any>(serviceName, data,  { needSuccessInfo: true });\r\n    promisr.subscribe({\r\n      next: (res: any) => {\r\n        if(fncSuccess != null){\r\n           fncSuccess(res);\r\n        }\r\n        return true;\r\n      },\r\n      error: (err: any) => {\r\n         if(fncError != null){\r\n           fncError();\r\n         }\r\n         return false;\r\n      },\r\n      complete: ()=> {}\r\n    })\r\n    return promisr;\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nconst routes: Routes = [\r\n  { path: 'analysis', loadChildren: () => import('./analysis/analysis.module').then(m => m.AnalysisModule) },\r\n  { path: 'monitor', loadChildren: () => import('./monitor/monitor.module').then(m => m.MonitorModule) },\r\n  { path: 'workbench', loadChildren: () => import('./workbench/workbench.module').then(m => m.WorkbenchModule) },\r\n  { path: \"demo\", loadChildren:()=> import('./demo/demo.module').then(m=>m.DemoModule)},\r\n  { path: '', redirectTo: 'analysis', pathMatch: 'full' }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class DashboardRoutingModule {}\r\n","import { NgModule } from '@angular/core';\r\n\r\nimport { DashboardRoutingModule } from './dashboard-routing.module';\r\nimport { WebserviceService } from 'src/app/core/services/common/webservice.service';\r\n\r\n\r\n@NgModule({\r\n  declarations: [],\r\n  imports: [DashboardRoutingModule],\r\n  providers: [WebserviceService]\r\n})\r\nexport class DashboardModule {}\r\n"],"names":["HttpHeaders","Const","WebserviceService","constructor","http","httpt","tinhthanhApi","headers","GetCallProvinces","fncSuccess","fncError","promise","get","provincesApi","subscribe","next","res","error","err","complete","GetCallCommonWs","serviceName","urlApi","observe","PostCallCommonWs","data","promisr","post","needSuccessInfo","GetCallWs","PostCallWs","PutCallWs","put","DeleteCallWs","delete","i0","factory","providedIn"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}