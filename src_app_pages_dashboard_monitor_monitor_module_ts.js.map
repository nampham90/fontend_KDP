{"version":3,"file":"src_app_pages_dashboard_monitor_monitor_module_ts.js","mappings":"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","sources":["./src/app/common/UrlDisplay.ts","./src/app/pages/dashboard/monitor/monitor-routing.module.ts","./src/app/pages/dashboard/monitor/monitor.component.ts","./src/app/pages/dashboard/monitor/monitor.component.html","./src/app/pages/dashboard/monitor/monitor.module.ts","./src/app/pages/system/base/base.component.ts"],"sourcesContent":["\r\n\r\nexport enum UrlDisplayId {\r\n    //dashboard\r\n    Demo = \"/default/dashboard/demo\",\r\n    Analysis = \"/default/dashboard/analysis\",\r\n    Monitor = \"/default/dashboard/monitor\",\r\n    Workbench = \"/default/dashboard/workbench\",\r\n    spxe00101 = 'xe/spxe00101',\r\n    //chuyen\r\n    spch00101 = 'chuyen/spch00101', // quản lý chuyến\r\n    spch00201 = 'chuyen/spch00201', // kế hoạch bọc hàng\r\n\r\n    // khach hang\r\n    spkh00101 = 'khachhang/spkh00101', //quản lý công nợ\r\n    spkh00201 = 'khachhang/spkh00201', // chi tiêt công nợ\r\n    \r\n\r\n    \r\n}","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { MonitorComponent } from './monitor.component';\r\n\r\nconst routes: Routes = [{ path: '', component: MonitorComponent, data: { title: 'Trang giám sát', key: 'monitor' } }];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class MonitorRoutingModule {}\r\n","import { DatePipe } from '@angular/common';\r\nimport { ChangeDetectionStrategy, ChangeDetectorRef, Component, NgZone, OnInit, TemplateRef, ViewChild } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { UrlDisplayId } from '@app/common/UrlDisplay';\r\nimport { WebserviceService } from '@app/core/services/common/webservice.service';\r\nimport { PageHeaderType } from '@app/shared/components/page-header/page-header.component';\r\nimport { NzSafeAny } from 'ng-zorro-antd/core/types';\r\nimport { BaseComponent } from '../../system/base/base.component';\r\n@Component({\r\n  selector: 'app-monitor',\r\n  templateUrl: './monitor.component.html',\r\n  styleUrls: ['./monitor.component.less'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class MonitorComponent extends BaseComponent{\r\n  DisplayScreenID: UrlDisplayId = UrlDisplayId.Monitor;\r\n\r\n  pageHeaderInfo: Partial<PageHeaderType> = {\r\n    title: '',\r\n    breadcrumb: [],\r\n    desc: ''\r\n  };\r\n\r\n\r\n constructor(\r\n    protected override webService: WebserviceService,\r\n    protected override router: Router,\r\n    protected override cdf :  ChangeDetectorRef,\r\n    protected override  datePipe : DatePipe,\r\n  ){\r\n    super(webService,router,cdf,datePipe);\r\n  }\r\n\r\n  @ViewChild('pageHeaderContent', { static: false }) pageHeaderContent!: TemplateRef<NzSafeAny>;\r\n\r\n  fnInit(){\r\n    \r\n    this.cdf.markForCheck();\r\n\r\n    this.pageHeaderInfo = {\r\n      title: this.formItemNm[3],\r\n      breadcrumb: [this.formItemNm[1], this.formItemNm[2], this.formItemNm[3]],\r\n      desc: this.pageHeaderContent\r\n    };\r\n  }\r\n  destroy() {}\r\n\r\n}\r\n","<app-page-header [pageHeaderInfo]=\"pageHeaderInfo\"></app-page-header>\r\n<section class=\"content-wrap\">\r\n  <section nz-row [nzGutter]=\"[16, 16]\">\r\n      Hello word !\r\n  </section>\r\n</section>\r\n","import { NgModule } from '@angular/core';\r\n\r\nimport { SharedModule } from '@shared/shared.module';\r\n\r\nimport { MonitorRoutingModule } from './monitor-routing.module';\r\nimport { MonitorComponent } from './monitor.component';\r\n\r\n@NgModule({\r\n  declarations: [MonitorComponent],\r\n  imports: [SharedModule, MonitorRoutingModule]\r\n})\r\nexport class MonitorModule {}\r\n","\r\n\r\nimport { Component,OnDestroy, OnInit, Injector, ChangeDetectionStrategy, ChangeDetectorRef } from '@angular/core';\r\nimport { IObjectString } from 'src/app/common/IObject';\r\nimport { WebserviceService,ObjectDataSC ,Product} from 'src/app/core/services/common/webservice.service';\r\nimport { $timeout } from 'src/app/common/Time';\r\nimport * as Const from 'src/app/common/const';\r\nimport { Router } from '@angular/router';\r\nimport { DatePipe } from '@angular/common';\r\nimport { UrlDisplayId } from '@app/common/UrlDisplay';\r\n\r\n@Component({\r\n    selector: 'app-base',\r\n    templateUrl: './base.component.html',\r\n    providers: [DatePipe]\r\n  })\r\nexport abstract class BaseComponent implements OnInit, OnDestroy {\r\n\r\n    formItemNm: IObjectString = {};\r\n    list:any = [];\r\n    title = 'nam pham';\r\n    constructor(\r\n        protected webService: WebserviceService,\r\n        protected router:Router,\r\n        protected  cdf :  ChangeDetectorRef,\r\n        protected datePipe: DatePipe\r\n    ) { }\r\n    ngOnDestroy(): void {\r\n        this.destroy();\r\n    }\r\n    ngOnInit() {\r\n       this.setFormItemNm();\r\n    }\r\n\r\n    setFormItemNm() {\r\n        let url = this.router.url;\r\n        this.webService.PostCallWs(Const.Ant100PostUrlParams,{url: url}, (response) => {\r\n            this.list = response;\r\n            this.list.forEach((row: { stt: string; title1: string }) => {\r\n              this.formItemNm[row.stt] = row.title1;\r\n            });\r\n            this.fnInit();\r\n        });\r\n    }\r\n\r\n    getDate() {\r\n        let date = this.datePipe.transform(new Date(), 'yyyy/MM/dd')+\"\";\r\n        return date;\r\n    }\r\n\r\n    formatDate(d: any) {\r\n        if(d == null || d == '') {\r\n            return '';\r\n        }\r\n        let date = this.datePipe.transform(d, 'yyyy/MM/dd') + \"\";\r\n        return date;\r\n    }\r\n\r\n    abstract fnInit(): any;\r\n    abstract destroy(): any;\r\n    abstract DisplayScreenID: UrlDisplayId;\r\n}\r\n"],"names":[],"sourceRoot":"webpack:///","x_google_ignoreList":[]}